@model IEnumerable<AffiliateNetwork.Web.Areas.Administration.Models.ListInfoPageViewModel>

@using GridMvc.Html

@{
    ViewBag.Title = "List Information Pages";
}
@section Styles{
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" type="text/css" />
}

<div class="row">
    <div class="col-md-12">
        <h1>@ViewBag.Title</h1>
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
        <hr />
    </div>
</div>

@helper EditColumn(int id)
{
   @Html.ActionLink("Edit", "Edit", new { id = id }, new { @class = "btn btn-primary" })
}

@helper DeleteColumn(int id)
{
    @Html.ActionLink("Delete", "Delete", new { id = id }, new { @class = "btn btn-danger" })
}


@Html.Grid(Model).Columns(columns =>
{
    columns.Add(x => x.Id).SetWidth(50).Sortable(true);
    columns.Add(x => x.SeoUrl).SetWidth(100).Sortable(true);
    columns.Add(x => x.Title).Sortable(true);
    columns.Add(x => x.Content).Sortable(true);
    columns.Add(x => x.Order).SetWidth(50).Sortable(true);
    columns.Add(x => x.IsVisible).SetWidth(50);
    columns.Add().RenderValueAs(x => EditColumn(x.Id)).Encoded(false).Sanitized(false).SetWidth(50);
    columns.Add().RenderValueAs(x => DeleteColumn(x.Id)).Encoded(false).Sanitized(false).SetWidth(50);
}).WithPaging(2)

@section Scripts{
    <script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"> </script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>
}